{"version":3,"sources":["StartQuiz.js","Question.js","Result.js","Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","height","marginTop","media","action","align","formControl","width","alignItems","formContent","margin","StartQuiz","classes","React","useState","difficulty","setDifficulty","Fragment","CssBaseline","Container","fixed","Card","className","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","CardActions","FormControl","Select","labelId","id","value","onChange","event","target","MenuItem","Button","to","Option","option","handleClick","disable","disabled","onClick","Question","question","handleSubmit","currentQuestion","handleOptionClick","e","question_text","choices","map","data","answer","isCorrect","correct_answer","typo","Result","results","length","answered","filter","correct","incorrect","Quiz","useParams","questions","setQuestions","setCurrentQuestion","useEffect","fetch","then","res","ok","json","result","concat","incorrect_answers","a","sort","Math","random","b","timeLeft","setTimeLeft","intervalId","setInterval","clearInterval","style","textAlign","fontSize","toLocaleString","minimumIntegerDigits","useGrouping","ans","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.911493b9.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: \"80%\",\n        height: 800,\n        marginTop: \"5%\"\n    },\n    media: {\n        height: 500,\n    },\n    action: {\n        align: \"center\",\n    },\n    formControl: {\n        width: \"100%\",\n        alignItems: \"center\",\n    },\n    formContent: {\n        margin: \"2%\",\n        width: \"20%\",\n    },\n});\n\nexport default function StartQuiz() {\n    const classes = useStyles();\n\n    const [difficulty, setDifficulty] = React.useState('easy');\n\n    const handleChange = (event) => {\n        setDifficulty(event.target.value);\n    };\n\n    return (\n        <React.Fragment>\n            <CssBaseline/>\n            <Container fixed>\n                <Card className={classes.root}>\n                    <CardActionArea>\n                        <CardMedia\n                            className={classes.media}\n                            image=\"https://cbspace.sgp1.cdn.digitaloceanspaces.com/reliable-academy/website/studymaterial/categories/1/computer-awareness-86bf576543556728f7104557eaf1e5ac4.jpg\"\n                            title=\"Computer Quiz\"\n                        />\n                        <CardContent align=\"center\">\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                Lets Start With Quiz....\n                            </Typography>\n                            <Typography variant=\"h5\" color=\"textSecondary\" component=\"p\">\n                                Which level of quiz you want to play?\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    <CardActions className={classes.action}>\n                        <FormControl className={classes.formControl}>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={difficulty}\n                                onChange={handleChange}\n                                className={classes.formContent}\n                            >\n                                <MenuItem value={\"easy\"}>Easy</MenuItem>\n                                <MenuItem value={\"medium\"}>Medium</MenuItem>\n                                <MenuItem value={\"hard\"}>Hard</MenuItem>\n                            </Select>\n                            <Button variant=\"outlined\" color=\"primary\" className={classes.formContent}>\n                                <Link to={`/quiz/${difficulty}`}>Start Quiz</Link>\n                            </Button>\n\n                        </FormControl>\n\n                    </CardActions>\n                </Card>\n            </Container>\n        </React.Fragment>\n    );\n}\n","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\nfunction Option({option, handleClick, disable, variant, color}) {\n    const classes = useStyles();\n\n    return (<p>\n        <Button\n            variant={variant}\n            color={color}\n            className={classes.option}\n            disabled={disable}\n            onClick={() => handleClick(option)}\n        >\n            {option}\n        </Button>\n    </p>);\n}\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: \"80%\",\n        marginTop: \"5%\"\n    },\n    action: {\n        align: \"center\",\n    },\n    formControl: {\n        width: \"100%\",\n        alignItems: \"center\",\n    },\n    option: {\n        margin: \"1%\",\n        width: \"100%\",\n    },\n});\n\nexport default function Question({question, handleSubmit, currentQuestion}) {\n    const classes = useStyles();\n    const handleOptionClick = (e) => {\n        handleSubmit(currentQuestion, e)\n    };\n\n    return (\n        <Card className={classes.root}>\n            <CardActionArea>\n                <CardContent align=\"center\">\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.option}>\n                        {question.question_text}\n                    </Typography>\n                    {question.choices.map(data => {\n                        let variant = \"outlined\";\n                        let color = \"primary\";\n                        if (question.answer) {\n                            if (question.answer === data && question.isCorrect) {\n                                variant = \"contained\";\n                                color = \"primary\";\n                            } else if (question.answer === data && !question.isCorrect) {\n                                variant = \"contained\";\n                                color = \"secondary\";\n                            }\n                            return (<Option\n                                option={data}\n                                handleClick={handleOptionClick}\n                                disable={false}\n                                variant={variant}\n                                color={color}\n                            />)\n                        }\n                        return (<Option\n                            option={data}\n                            handleClick={handleOptionClick}\n                            disable={false}\n                            variant={variant}\n                            color={color}\n                        />)\n                    })}\n                    <Typography gutterBottom variant=\"body2\" component=\"h5\" className={classes.option}>\n                        {question.answer ? question.isCorrect ? \"Correct answer\" : `Wrong answer!! Correct answer is ${question.correct_answer}` : ''}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    );\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: \"80%\",\n        height: 800,\n        marginTop: \"5%\"\n    },\n    media: {\n        height: 300,\n    },\n    action: {\n        align: \"center\",\n    },\n    formControl: {\n        width: \"100%\",\n        alignItems: \"center\",\n    },\n    formContent: {\n        margin: \"5%\",\n        width: \"20%\",\n    },\n    typo: {\n        marginTop: \"5%\"\n    }\n});\n\nexport default function Result({results}) {\n    const classes = useStyles();\n\n    const answered = () => {\n        const answered = results.filter(data =>\n            data.answered\n        );\n        return answered.length || 0;\n    };\n    const correct = () => {\n        const correct = results.filter(data =>\n            data.isCorrect\n        );\n        return correct.length || 0;\n    };\n    const incorrect = () => {\n        const incorrect = results.filter(data =>\n            !data.isCorrect && data.answered\n        );\n        return incorrect.length || 0;\n    };\n\n    return (\n        <Card className={classes.root}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image=\"https://cbspace.sgp1.cdn.digitaloceanspaces.com/reliable-academy/website/studymaterial/categories/1/computer-awareness-86bf576543556728f7104557eaf1e5ac4.jpg\"\n                    title=\"Computer Quiz\"\n                />\n                <CardContent align=\"center\">\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        Results\n                    </Typography>\n                    <Typography variant=\"h5\" color=\"textSecondary\" component=\"p\">\n                        Below are the results of your quiz\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions className={classes.action}>\n                <FormControl className={classes.formControl}>\n                    <Typography gutterBottom variant=\"h5\" color=\"primary\" component=\"h2\" className={classes.typo}>\n                        Total Questions: <b>{results.length}</b>\n                    </Typography>\n                    <Typography gutterBottom variant=\"h5\" color=\"primary\" component=\"h2\">\n                        Questions Answered: <b>{answered()}</b>\n                    </Typography>\n                    <Typography variant=\"h5\" color=\"primary\" component=\"p\">\n                        Questions Correct: <b>{correct()}</b>\n                    </Typography>\n                    <Typography variant=\"h5\" color=\"primary\" component=\"p\">\n                        Questions Incorrect: <b>{incorrect()}</b>\n                    </Typography>\n                    <Button variant=\"outlined\" color=\"primary\" className={classes.formContent}>\n                        <Link to={`/start`}>Restart Quiz</Link>\n                    </Button>\n                </FormControl>\n\n            </CardActions>\n        </Card>\n    );\n}\n","import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport {useParams} from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Question from \"./Question\";\nimport Result from \"./Result\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: \"80%\",\n        marginTop: \"5%\"\n    },\n    media: {\n        height: 500,\n    },\n    action: {\n        align: \"center\",\n    },\n    formControl: {\n        width: \"100%\",\n        alignItems: \"center\",\n    },\n    option: {\n        margin: \"1%\",\n        width: \"80%\",\n    },\n});\n\nexport default function Quiz() {\n    const classes = useStyles();\n    const difficulty = useParams().difficulty || 'easy';\n\n    const [questions, setQuestions] = useState([]);\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n\n\n    function shuffle(choices) {\n        return choices.map((a) => ({sort: Math.random(), value: a}))\n            .sort((a, b) => a.sort - b.sort)\n            .map((a) => a.value)\n    }\n\n    useEffect(() => {\n        fetch(`https://opentdb.com/api.php?amount=10&category=18&difficulty=${difficulty}`)\n            .then(res => {\n                if (res.ok) {\n                    res.json()\n                        .then(data => {\n                            if (data.results) {\n                                const results = data.results.map((result) => {\n                                    return {\n                                        question_text: result.question,\n                                        correct_answer: result.correct_answer,\n                                        answered: false,\n                                        choices: shuffle([result.correct_answer].concat(result.incorrect_answers)),\n                                        isCorrect: false,\n                                        answer: \"\"\n                                    }\n                                });\n                                setQuestions(results);\n                            }\n                        })\n                }\n            })\n    }, []);\n\n\n    const [timeLeft, setTimeLeft] = useState(15);\n\n    useEffect(() => {\n        if (!timeLeft) {\n            if (currentQuestion < questions.length) {\n                setCurrentQuestion(currentQuestion + 1);\n                setTimeLeft(15)\n            }\n            return;\n        }\n        const intervalId = setInterval(() => {\n            setTimeLeft(timeLeft - 1);\n        }, 1000);\n        return () => clearInterval(intervalId);\n    }, [timeLeft]);\n\n    const handleNext = () => {\n        if (currentQuestion < questions.length) {\n            setCurrentQuestion(currentQuestion + 1);\n            setTimeLeft(15)\n        }\n    };\n\n    const handleSubmit = (currentQuestion, ans) => {\n        if (!questions[currentQuestion].answered) {\n            const data = questions;\n            data[currentQuestion].answer = ans;\n            data[currentQuestion].answered = true;\n            data[currentQuestion].isCorrect = ans === data[currentQuestion].correct_answer;\n            setQuestions(data);\n        }\n    };\n\n\n    return (\n        <React.Fragment>\n            <CssBaseline/>\n            <Container fixed>\n                <Card className={classes.root}>\n                    <CardActionArea>\n                        <CardContent align=\"center\">\n                            {currentQuestion < questions.length && <div style={{textAlign: 'center'}}>\n                                <div style={{fontSize: '50px'}}>\n                                    <span>00</span>:<span>{timeLeft.toLocaleString('en-US', {\n                                    minimumIntegerDigits: 2,\n                                    useGrouping: false\n                                })}</span>\n                                </div>\n                            </div>}\n                            {questions && questions.length > 0 && currentQuestion < questions.length &&\n                            <Question question={questions[currentQuestion]} handleSubmit={handleSubmit}\n                                      currentQuestion={currentQuestion}/>}\n\n                            {currentQuestion < questions.length && <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={\n                                    handleNext\n                                }\n                                style={{margin: '5%'}}>\n                                Next\n                            </Button>}\n\n                            {questions && questions.length > 0 && currentQuestion >= questions.length &&\n                            <Result results={questions}/>}\n                        </CardContent>\n                    </CardActionArea>\n                </Card>\n            </Container>\n        </React.Fragment>\n    );\n}\n\n\n","import {BrowserRouter as Router, Route, Switch,} from \"react-router-dom\";\nimport StartQuiz from \"./StartQuiz\";\nimport Quiz from \"./Quiz\";\n\nexport default function App() {\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <Route exact path=\"/quiz/:difficulty\">\n                        <Quiz/>\n                    </Route>\n                    <Route path=\"/\">\n                        <StartQuiz/>\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}